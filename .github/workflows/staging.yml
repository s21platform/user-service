name: Dev CI/CD to Development server
on:
  pull_request:
    branches:
      - main


jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Run tests
        run: go test -coverprofile=coverage.out -tags=test -v ./...

      #      - name: Check coverage
      #        run: |
      #          go tool cover -func=coverage.out -o=coverage.txt
      #          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
      #          echo "Coverage is $coverage%"
      #          if (( $(echo "$coverage < 80.0" | bc -l) )); then
      #          echo "Coverage is below 80%"
      #          exit 1
      #          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.txt
  build_and_push:
    name: Build and Push Image to YC
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Yandex CR Login
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEY }}
      - name: Build and Push to YC
        run: |
          docker build -t ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}:develop .
          docker push ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}:develop
          docker build -t ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}-migrate:develop ./migrations
          docker push ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}-migrate:develop
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEVELOP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_SSH_KEY_DEVELOP }}
          passphrase: ${{ secrets.PASSPHRASE_DEVELOP }}
          script: |
            docker pull ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}:develop
            docker-compose -f ~/space21/docker-compose-dev.yml --env-file ~/space21/.env_dev up -d ${{ secrets.CR_NAME }}